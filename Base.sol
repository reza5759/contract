// SPDX-License-Identifier: Unlicensed
pragma solidity >=0.4.22 <0.9.0;
import "./Smart_Binance.sol";
import "./M1.sol";
import "./M2.sol";
import "./M3.sol";
import "./M4.sol";
import "./M5.sol";
import "./M6.sol";
import "./M7.sol";
import "./M8.sol";
import "./M9.sol";
import "./M10.sol";
import "./M11.sol";
import "./M12.sol";
contract Base { struct Node {
        uint32 id;
        uint32 AL;
        uint32 AR;
        uint24 LT;
        uint24 RT;
        uint8 XI;
        bool YY;
        address UP;
        address PO;
        address QO; }
    mapping(address => Node) internal KW;
    mapping(address => uint8) internal EE;
    mapping(uint32 => address) internal VV;
    mapping(uint256 => address) internal JJ;
    mapping(uint24 => address) internal JL;
    mapping(uint24 => address) internal JO;
    mapping(uint16 => address) internal LM;
    mapping(uint8 => address) internal UM;
    address internal R_S;
    address internal SBT;
    address internal OP;
    address internal JY;
    IERC20 internal SC;
    uint32 internal JK;
    uint32 internal JP;
    uint24 internal DJ;
    uint24 internal DW;
    uint24 internal ZL;
    uint16 internal DS;
    uint256 internal ZS;
    uint256 internal ZM;
    uint256 internal DZ;
    uint8 internal LK;
    uint8 internal DF;
    uint8 CI;
    Smart_Binance internal NBJ;
    M1 internal NBJ2;
    M2 internal NBJ3;
    M3 internal NBJ4;
    M4 internal NBJ5;
    M5 internal NBJ6;
    M6 internal NBJ7;
    M7 internal NBJ8;
    M8 internal NBJ9;
    M9 internal NBJ10;
    M10 internal NBJ11;
    M11 internal NBJ12;
    M12 internal NBJ13;
    string internal Note;
    string internal IPFS;}
